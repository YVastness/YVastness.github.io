{
    "sourceFile": "source/_posts/git mv和mv的区别.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1685875601212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1685875610322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n ---\n-title: git mv和mv的区别\n+title: git mv 和 mv 的区别\n date: 2022-12-01 13:23:05\n tags: SpringMVC\n ---\n `git mv`的执行过程：\n"
                },
                {
                    "date": 1685875620951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n ---\n title: git mv 和 mv 的区别\n-date: 2022-12-01 13:23:05\n+date: 2023-3-02 13:23:05\n tags: SpringMVC\n ---\n `git mv`的执行过程：\n \n"
                }
            ],
            "date": 1685875601211,
            "name": "Commit-0",
            "content": "---\ntitle: git mv和mv的区别\ndate: 2022-12-01 13:23:05\ntags: SpringMVC\n---\n`git mv`的执行过程：\n\n1. 创建一个和之前文件内容一样的文件，文件名为新的文件名\n\n2. 将原来的文件删除\n\n3. 将删除的文件添加到暂存区\n\n4. 将新建的文件添加到暂存区\n\n   ```bash\n   test on master\n   ❯ git mv 2.txt 22.txt\n   \n   test on master [»]\n   ❯ git status\n   On branch master\n   Changes to be committed:\n     (use \"git restore --staged <file>...\" to unstage)\n           renamed:    2.txt -> 22.txt\n   ```\n\n`mv`的执行过程：只是重命名了一个文件。\n\n但是 git 识别文件变动为：\n\n1. 创建一个和之前文件内容一样的文件，文件名为新的文件名\n2. 将原来的文件删除\n\n```bash\ntest on master\n❯ mv 3.txt 33.txt\n\ntest on master [✘?]\n❯ git status\nOn branch master\nChanges not staged for commit:\n  (use \"git add/rm <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n        deleted:    3.txt\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n        33.txt\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n```\n\n**结论：**`git mv`和`mv`的区别就是`mv`最后没有把工作区的文件添加到暂存区。"
        }
    ]
}